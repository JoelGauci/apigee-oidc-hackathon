<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>SA-DoSProtection</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
        <Flow name="/authorize">
            <Description>Initiate auth sequence</Description>
            <Request>
                <Step>
                    <Name>VAK-VerifyAPIKey-ClientId</Name>
                </Step>
                <Step>
                    <Name>EV-InputQueryParams-Authorize</Name>
                </Step>
                <Step>
                    <!--+
                        | **************************************************************************
                        | *** test 'redirect_uri' query param and value set at application level ***
                        | **************************************************************************
                        +-->
                    <Name>RF-RedirectURI-Control</Name>
                    <Condition>( verifyapikey.VAK-VerifyAPIKey-ClientId.redirection_uris != oidc.flow.authorize.redirect_uri )</Condition>
                </Step>
                <Step>
                    <!--+
                        | *******************************************************************
                        | *** query param response_type is not equal to 'code' or 'token' ***
                        | *******************************************************************
                        +-->
                    <Name>RF-ResponseType-Invalid</Name>
                    <Condition>( oidc.flow.authorize.response_type != "code" ) and ( oidc.flow.authorize.response_type != "token" )</Condition>
                </Step>
                <Step>
                    <!--+
                        | *******************************************************************************
                        | *** control that a state query parameter has not been provided or is  empty ***
                        | *******************************************************************************
                        +-->
                    <Name>RF-State-Control</Name>
                    <Condition>( oidc.flow.authorize.state Is null ) or ( oidc.flow.authorize.state = "" )</Condition>
                </Step>
                <Step>
                    <Name>KVM-IdpParameters</Name>
                </Step>
                <Step>
                    <Name>OA2-GenerateAzCode-State</Name>
                </Step>
                <Step>
                    <Name>AM-State</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>AM-RedirectToIdpAuth</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/authorize") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="/callback">
            <Description>Token issuance (after end-user auth and consent)</Description>
            <Request>
                <Step>
                    <Name>EV-InputQueryParams-Callback</Name>
                </Step>
                <Step>
                    <!--+
                        | *****************************************************************************
                        | *** control that a code query parameter has not been provided or is empty ***
                        | *****************************************************************************
                        +-->
                    <Name>RF-Code-Control</Name>
                    <Condition>( oidc.flow.callback.code Is null ) or ( oidc.flow.callback.code = "" )</Condition>
                </Step>
                <Step>
                    <!--+
                        | ******************************************************************************
                        | *** control that a state query parameter has not been provided or is empty ***
                        | ******************************************************************************
                        +-->
                    <Name>RF-State-Control</Name>
                    <Condition>( oidc.flow.callback.state Is null ) or ( oidc.flow.callback.state = "" )</Condition>
                </Step>
                <Step>
                    <Name>OA2-AttributesFromAzCode-State</Name>
                </Step>
                <Step>
                    <Name>AM-StateAttributes</Name>
                </Step>
                <Step>
                    <Name>VAK-VerifyAPIKey-ClientId</Name>
                </Step>
                <Step>
                    <Name>AM-SetQueryParamsForAzCode</Name>
                </Step>
                <Step>
                    <Name>OA2-GenerateAzCode-IdpProxy</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>AM-RedirectToClientApp</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/callback") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="/token">
            <Description>Token issuance (after end-user auth and consent)</Description>
            <Request>
                <Step>
                    <Name>BA-GetClientCredentials</Name>
                </Step>
                <Step>
                    <Name>VAK-VerifyAPIKey-ClientId</Name>
                </Step>
                <Step>
                    <!--+
                        | ********************************************************************************
                        | *** test 'client_secret' basic auth param and value set at application level ***
                        | ********************************************************************************
                        +-->
                    <Name>RF-ClientSecret-Control</Name>
                    <Condition>( verifyapikey.VAK-VerifyAPIKey-ClientId.client_secret != oidc.flow.client_secret )</Condition>
                </Step>
                <Step>
                    <!--+
                        | *************************************************************************
                        | *** test 'redirect_uri' form param and value set at application level ***
                        | *************************************************************************
                        +-->
                    <Name>RF-RedirectURI-Control</Name>
                    <Condition>( verifyapikey.VAK-VerifyAPIKey-ClientId.redirection_uris != request.formparam.redirect_uri )</Condition>
                </Step>
                <Step>
                    <!--+
                        | **********************************************************************
                        | *** test 'grant_type' form param. (must = to 'authorization_code') ***
                        | **********************************************************************
                        +-->
                    <Name>RF-GrantType-Control</Name>
                    <Condition>( request.formparam.grant_type != "authorization_code" )</Condition>
                </Step>
                <Step>
                    <Name>EV-InputFormParams-Token</Name>
                </Step>
                <Step>
                    <Name>OA2-AttributesFromAzCode-IdpProxy</Name>
                </Step>
                <Step>
                    <Name>OA2-AttributesFromAzCode-IdpProxy-State</Name>
                </Step>
                <Step>
                    <Name>AM-StateAttributes-Token</Name>
                </Step>
                <Step>
                    <Name>KVM-IdpParameters</Name>
                </Step>
                <Step>
                    <Name>BA-AddClientID-ClientSecret-AzHeader</Name>
                </Step>
                <Step>
                    <Name>SC-GetAccessTokenFromIdp</Name>
                </Step>
                <Step>
                    <Name>EV-AccessTokenAndIdToken</Name>
                </Step>
                <Step>
                    <Name>LC-GetJWKS</Name>
                </Step>
                <Step>
                    <Name>SC-GetLatestJWKS</Name>
                    <Condition>(lookupcache.LC-GetJWKS.cachehit == false)</Condition>
                </Step>
                <Step>
                    <Name>EV-ExtractJWKS</Name>
                    <Condition>(lookupcache.LC-GetJWKS.cachehit == false)</Condition>
                </Step>
                <Step>
                    <Name>PC-CacheJWKS</Name>
                    <Condition>(lookupcache.LC-GetJWKS.cachehit == false)</Condition>
                </Step>
                <Step>
                    <Name>VJ-VerifyIdPIssuedIdToken</Name>
                </Step>
                <Step>
                    <Name>SC-GetUserInfo</Name>
                </Step>
                <Step>
                    <Name>EV-UserInfo</Name>
                </Step>
                <Step>
                    <Name>AM-SetOAuth20Request-Password</Name>
                </Step>
                <Step>
                    <Name>JS-SetAccessTokenExpiry</Name>
                </Step>
                <Step>
                    <Name>OA2-GenerateAccessToken</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/token") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="/tokeninfo">
            <Description/>
            <Request>
                <Step>
                    <Name>OA2-VerifyAccessToken</Name>
                </Step>
                <Step>
                    <Name>OA2-AttributesFromAccessToken</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>AM-TokenInfo</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/tokeninfo") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="/protected">
            <Description/>
            <Request>
                <Step>
                    <Name>OA2-VerifyAccessToken</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>AM-AccessGranted</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/protected") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="404 - Not Found">
            <Request>
                <Step>
                    <Name>RF-404NotFound</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <HTTPProxyConnection>
        <BasePath>/v1/oauth20</BasePath>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="noroute"/>
</ProxyEndpoint>